# Generated by Django 4.2.2 on 2023-08-11 09:40

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='FrequencyRequestPosition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('frequency', models.PositiveIntegerField(unique=True)),
            ],
            options={
                'verbose_name': 'Частота, час',
                'verbose_name_plural': 'Частота, часы',
            },
        ),
        migrations.CreateModel(
            name='TelegramUser',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('add_time', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Время добавления')),
                ('user_id', models.PositiveIntegerField(editable=False, unique=True)),
                ('e_mail', models.EmailField(blank=True, max_length=254)),
            ],
            options={
                'verbose_name': 'Пользователь телеграм',
                'verbose_name_plural': 'Пользователи телеграм',
            },
        ),
        migrations.CreateModel(
            name='RequestStock',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('add_time', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Время добавления')),
                ('articul', models.IntegerField()),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_stock', to='data_handler.telegramuser', to_field='user_id', verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Запрос остатков',
                'verbose_name_plural': 'Запросы остатков',
            },
        ),
        migrations.CreateModel(
            name='RequestRate',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('add_time', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Время добавления')),
                ('warehouse_id', models.IntegerField()),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_rate', to='data_handler.telegramuser', to_field='user_id', verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Коэффициент приемки',
                'verbose_name_plural': 'Коэффициенты приемки',
            },
        ),
        migrations.CreateModel(
            name='RequestPosition',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('add_time', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Время добавления')),
                ('articul', models.IntegerField()),
                ('text', models.CharField(max_length=255)),
                ('last_request', models.DateTimeField(auto_now_add=True, verbose_name='Время последнего запроса')),
                ('frequency', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='frequencies', to='data_handler.frequencyrequestposition', to_field='frequency', verbose_name='Частота')),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subscribers', to='data_handler.telegramuser', to_field='user_id', verbose_name='Подписчик')),
            ],
            options={
                'verbose_name': 'Запрос позиции артикула',
                'verbose_name_plural': 'Запросы позиций артикулов',
            },
        ),
        migrations.AddConstraint(
            model_name='requeststock',
            constraint=models.UniqueConstraint(fields=('articul', 'user_id'), name='unique_articul_user_id'),
        ),
        migrations.AddConstraint(
            model_name='requestrate',
            constraint=models.UniqueConstraint(fields=('warehouse_id', 'user_id'), name='unique_warehouse_id_user_id'),
        ),
        migrations.AddConstraint(
            model_name='requestposition',
            constraint=models.UniqueConstraint(fields=('articul', 'text', 'user_id'), name='unique_articul_text_user_id'),
        ),
    ]
