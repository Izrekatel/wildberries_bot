version: '3.8'

services:
  bot:
    container_name: bot_container
    build:
      context: ./bot/
    restart: always
    env_file:
      - ./.env

  postgres:
    container_name: postgres_container
    image: postgres:13.0-alpine
    command:
      - "postgres"
      - "-c"
      - "max_connections=50"
      - "-c"
      - "shared_buffers=1GB"
      - "-c"
      - "effective_cache_size=4GB"
      - "-c"
      - "work_mem=16MB"
      - "-c"
      - "maintenance_work_mem=512MB"
      - "-c"
      - "random_page_cost=1.1"
      - "-c"
      - "temp_file_limit=10GB"
      - "-c"
      - "log_min_duration_statement=200ms"
      - "-c"
      - "idle_in_transaction_session_timeout=10s"
      - "-c"
      - "lock_timeout=1s"
      - "-c"
      - "statement_timeout=60s"
      - "-c"
      - "shared_preload_libraries=pg_stat_statements"
      - "-c"
      - "pg_stat_statements.max=10000"
      - "-c"
      - "pg_stat_statements.track=all"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U '$POSTGRES_USER' -d '$POSTGRES_DB'"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: unless-stopped
    volumes:
      - postgres-data:/var/lib/postgresql/data
    env_file:
      - ./expert_system/.env
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 4G

  expert_system:
    container_name: expert_system_container
    platform: linux/x86_64
    build:
      context: ./expert_system/
    restart: always
    volumes:
      - static_value:/app_expert_system/staticfiles/
    depends_on:
      - postgres
    env_file:
      - ./.env

  nginx:
    container_name: nginx_container
    image: nginx:1.21.3-alpine
    restart: always
    ports:
      - "80:80"
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      - static_value:/var/html/staticfiles/
    depends_on:
      - expert_system

volumes:
  postgres-data:
  static_value: